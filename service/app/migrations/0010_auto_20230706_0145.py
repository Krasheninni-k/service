# Generated by Django 3.2.16 on 2023-07-05 22:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0009_auto_20230705_1429'),
    ]

    operations = [
        migrations.CreateModel(
            name='SaleDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество единиц товаров')),
                ('sale_price_RUB', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=9, null=True, verbose_name='Цена продажи')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('sale_number', models.IntegerField(default=0, verbose_name='Номер продажи')),
                ('sale_date', models.DateTimeField(blank=True, verbose_name='Дата продажи')),
                ('quantity', models.IntegerField(default=1, verbose_name='Количество наименований товаров')),
                ('product_list', models.TextField(blank=True, verbose_name='Cостав продажи')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=8, null=True, verbose_name='Цена проджаи')),
                ('comment', models.CharField(max_length=256, verbose_name='Комментарий')),
                ('client_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods', to='app.client_type', verbose_name='Тип покупателя')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор записи')),
                ('payment_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods', to='app.payment_type', verbose_name='Способ оплаты')),
                ('receiving_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods', to='app.receiving_type', verbose_name='Тип получения')),
            ],
            options={
                'verbose_name': 'Продажа',
                'verbose_name_plural': 'Продажи',
                'ordering': ['-sale_number'],
            },
        ),
        migrations.DeleteModel(
            name='ForStock',
        ),
        migrations.RemoveField(
            model_name='goods',
            name='selling_price_RUB',
        ),
        migrations.RemoveField(
            model_name='goods',
            name='sold',
        ),
        migrations.AlterField(
            model_name='catalog',
            name='weight',
            field=models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=5, null=True, verbose_name='Вес в кг'),
        ),
        migrations.AddField(
            model_name='saledetail',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sale_detail', to='app.catalog', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='saledetail',
            name='sale_date',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_detail_sale_date', to='app.sales', verbose_name='Дата продажи'),
        ),
        migrations.AddField(
            model_name='saledetail',
            name='sale_number',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sale_detail_sale_number', to='app.sales', verbose_name='Номер продажи'),
        ),
        migrations.AddField(
            model_name='goods',
            name='sale_price_RUB',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_sale_price_RUB', to='app.saledetail', verbose_name='Цена продажи'),
        ),
        migrations.AlterField(
            model_name='goods',
            name='client_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_client_type', to='app.sales', verbose_name='Тип покупателя'),
        ),
        migrations.AlterField(
            model_name='goods',
            name='payment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_payment_type', to='app.sales', verbose_name='Способ оплаты'),
        ),
        migrations.AlterField(
            model_name='goods',
            name='receiving_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_receiving_type', to='app.sales', verbose_name='Тип получения'),
        ),
        migrations.AlterField(
            model_name='goods',
            name='sale_date',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goods_sale_date', to='app.sales', verbose_name='Дата продажи'),
        ),
        migrations.AddConstraint(
            model_name='sales',
            constraint=models.UniqueConstraint(fields=('sale_number',), name='Unique sale_number'),
        ),
    ]
